name: Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
      aws_region:
        description: "AWS region"
        required: true
        default: "eu-west-2"
        type: choice
        options:
          - eu-west-2
          - us-east-1
          - ap-south-1

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ github.event.inputs.aws_region }}
      ACTION: ${{ github.event.inputs.action }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply/Destroy
        run: |
          if [ "${ACTION}" = "apply" ]; then
            terraform apply -auto-approve \
              -var="region=${AWS_REGION}" \
              -var="public_key=${{ secrets.EC2_SSH_PUBLIC_KEY }}"
          else
            terraform destroy -auto-approve \
              -var="region=${AWS_REGION}" \
              -var="public_key=${{ secrets.EC2_SSH_PUBLIC_KEY }}"
          fi

      - name: Get EC2 Public IP
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          EC2_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=my-ec2" "Name=instance-state-name,Values=running" \
            --region ${AWS_REGION} \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "ec2_ip=$EC2_IP" > ec2_ip.txt
          echo "EC2 IP: $EC2_IP"

      - name: Upload EC2 IP
        if: ${{ github.event.inputs.action == 'apply' }}
        uses: actions/upload-artifact@v4
        with:
          name: ec2-ip
          path: ec2_ip.txt
